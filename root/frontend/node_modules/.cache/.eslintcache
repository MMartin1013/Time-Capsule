[{"/Users/MAC/Desktop/Time-Capsule/root/frontend/src/index.js":"1","/Users/MAC/Desktop/Time-Capsule/root/frontend/src/reportWebVitals.js":"2","/Users/MAC/Desktop/Time-Capsule/root/frontend/src/App.js":"3","/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/Registerpage.js":"4","/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/Homepage.js":"5","/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/Messagepage.js":"6","/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/Loginpage.js":"7","/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/SplashLoginpage.js":"8"},{"size":539,"mtime":1681925119896,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1681925119898,"results":"11","hashOfConfig":"10"},{"size":1011,"mtime":1682081016191,"results":"12","hashOfConfig":"10"},{"size":5475,"mtime":1682058242301,"results":"13","hashOfConfig":"10"},{"size":3326,"mtime":1682058742565,"results":"14","hashOfConfig":"10"},{"size":3494,"mtime":1682062222139,"results":"15","hashOfConfig":"10"},{"size":3511,"mtime":1682056246344,"results":"16","hashOfConfig":"10"},{"size":3950,"mtime":1682056966886,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1vknlma",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"21"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"/Users/MAC/Desktop/Time-Capsule/root/frontend/src/index.js",[],[],[],"/Users/MAC/Desktop/Time-Capsule/root/frontend/src/reportWebVitals.js",[],[],"/Users/MAC/Desktop/Time-Capsule/root/frontend/src/App.js",[],[],"/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/Registerpage.js",[],[],"/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/Homepage.js",["46","47","48","49"],[],"import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport logo1 from '../../src/Time-Capsule-Clock-Logo.png';\nimport logo2 from '../../src/logoTC.png'\nimport axios from 'axios';\nimport Splashr from 'splashr'\n\nconst splash1 = <div class= \"splash-screen1\">\n  <div className = 'Logo' \n  style={{ display: 'grid', \n          justifyContent: 'center', \n          alignItems: 'center',\n          width: '100%', \n          height: '100%',\n          position: 'absolute',\n          backgroundColor: \"#8eecec\" }}\n    >\n    <h1 style={{ paddingTop: 22, paddingLeft: 300,width: 800, fontSize: 80 ,fontWeight: \"bold\" }}>Time Capsule</h1>\n    <img style={{paddingLeft: 472, paddingBottom: 390}}src={logo1} alt=\"Logo\" />\n            \n  </div>\n</div>\n\n\n\nfunction LoginPage() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const navigate = useNavigate();\n\n  const handleLogin = () => {\n    // make HTTP request to server to check login credentials\n      const data = JSON.stringify({\n        \"username\": username,\n        \"password\": password\n      });\n    \n    const config = {\n      method: 'post',\n      maxBodyLength: Infinity,\n      url: 'http://localhost:3001/users/',\n      headers: {\n      'Content-Type': 'application/json'\n      },\n      data : data\n    };\n\n    axios.request(config)\n      .then((response) => {\n        console.log('Login successful');\n        console.log(JSON.stringify(response.data));\n        // redirect user to home page or dashboard on successful login\n        navigate('/home');\n      })\n      .catch((error) => {\n      //display error message to user\n      console.error('Login failed', error);\n      console.log(error);\n      });\n  };\n  \n  return (\n    <Splashr splash={splash1} transitionTime={1000} minDelay={500}>\n      \n    <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh',  backgroundColor: \"#8eecec\" }}>\n      <div style={{ alignItems: 'center' }}>\n      <h1 style={{ paddingLeft: 300,width: 800, fontSize: 80 ,fontWeight: \"bold\" }}>Time Capsule</h1>\n        <div className = 'Logo' style={{ zIndex: 5, display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '20px' }}>\n          <img style={{paddingBottom: 40}}src={logo2} alt=\"Logo\" />\n        </div>\n        <h1 style={{ textAlign: 'center', fontFamily: 'Lobster two' }}>Message Inbox</h1>\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <textarea type=\"text\" placeholder='Inbox is empty...'\n                  placeholderTextColor=\"#aaaaaa\" rows=\"25\" style={{ marginBottom: '10px' ,height: 200, width: 400,\n        borderRadius: 5,\n        overflow: 'hidden',\n        backgroundColor: 'white',\n        marginTop: 15,\n        marginBottom: 5,\n        marginLeft: 30,\n        marginRight: 30,\n        fontSize: '20px',\n        \n        \n       }} />\n        </div>\n        <p style={{paddingBottom: 55, fontWeight: 'bold', textAlign: 'center', marginTop: '20px' }}>Wanna Create A Message?  <Link to=\"/message\" style={{ fontWeight: 'bold', textDecoration: 'underline', color: 'blue' }}>Create Message</Link></p>\n        \n      </div>\n    </div>\n    </Splashr>\n    \n  );\n}\n\nexport default LoginPage;\n","/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/Messagepage.js",["50","51","52","53","54","55","56","57"],[],"import React, { useEffect, useRef, useState } from 'react';\nimport logo from '../../src/logoTC.png';\nimport { Link } from 'react-router-dom';\nimport 'react-datetime-picker/dist/DateTimePicker.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-clock/dist/Clock.css';\nimport DateTimePicker from 'react-datetime-picker'\nimport Clock from 'react-clock'\nimport Splashr from 'splashr'\nimport logo1 from '../../src/Time-Capsule-Clock-Logo.png';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n\n\nconst splash1 = <div class= \"splash-screen1\">\n  <div className = 'Logo' \n  style={{ display: 'grid', \n          justifyContent: 'center', \n          alignItems: 'center',\n          width: '100%', \n          height: '100%',\n          position: 'absolute',\n          backgroundColor: \"#8eecec\" }}\n    >\n    <h1 style={{paddingTop: 22, paddingLeft: 300, justifyContent: 'center', width: 800, fontSize: 80 ,fontWeight: \"bold\" }}>Time Capsule</h1>\n    <img style={{paddingLeft: 472, paddingBottom: 390}}src={logo1} alt=\"Logo\" />\n            \n  </div>\n</div>\n\nexport const Homepage = () => {\n\n    const [userMessage, setUserMessage] = useState('');\n    const [date, setDate] = useState(new Date());\n    const [time, setTime] = useState(new Date());\n    \n    //const dateInputRef = useRef(null);\n\n    const handleDateChange = (date) => {\n        setDate(date.value)\n        return (\n          alert('New date is: ', date)\n\n        );\n    };\n      \n    // const handleDateChange = (e) => {\n    //   setDate(date);\n    // };\n\n    const handleTextChange = (e) => {\n      setUserMessage(e.target.value);\n    };\n\n    useEffect(() => {\n      const interval = setInterval(() => setTime(new Date()), 1000);\n  \n      return () => {\n        clearInterval(interval);\n      };\n    }, []);\n      \n\n    return (\n      <Splashr splash={splash1} transitionTime={1000} minDelay={500}>\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh', backgroundColor: \"#8eecec\" }}>\n        <div style={{ alignItems: 'center' }}>\n        <h1 style={{paddingTop: 70, justifyContent: 'center', paddingLeft: 300,width: 800, fontSize: 80 ,fontWeight: \"bold\" }}>Time Capsule</h1>\n          <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginBottom: '20px' }}>\n              <img src={logo} alt=\"Logo\" />\n          </div>\n          <h1 style={{paddingBottom: 0, textAlign: 'center', fontFamily: 'Lobster two' }}>Create Message</h1>\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <DropdownButton id=\"dropdown-item-button\" title=\"Select an Option\">\n      <Dropdown.ItemText>Submit Message</Dropdown.ItemText>\n      <Dropdown.Item as=\"button\">Inbox</Dropdown.Item>\n      <Dropdown.Item as=\"button\">Calendar</Dropdown.Item>\n      <Dropdown.Item as=\"button\">Log Out</Dropdown.Item>\n    </DropdownButton>\n          <textarea type=\"text\" value={userMessage} onChange={handleTextChange} placeholder='Start Typing...'\n                  placeholderTextColor=\"#aaaaaa\" rows=\"25\" style={{ marginBottom: '10px' ,height: 200, width: 400,\n        borderRadius: 5,\n        overflow: 'hidden',\n        backgroundColor: 'white',\n        marginTop: 15,\n        marginBottom: 5,\n        marginLeft: 30,\n        marginRight: 30,\n        fontSize: '20px',\n        \n       }} />\n        </div>\n      </div>\n    </div>\n    </Splashr>\n  );\n}\n\nexport default Homepage;",[],"/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/Loginpage.js",[],[],"/Users/MAC/Desktop/Time-Capsule/root/frontend/src/pages/SplashLoginpage.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":28,"column":20,"nodeType":"60","messageId":"61","endLine":28,"endColumn":31},{"ruleId":"58","severity":1,"message":"62","line":29,"column":20,"nodeType":"60","messageId":"61","endLine":29,"endColumn":31},{"ruleId":"58","severity":1,"message":"63","line":33,"column":9,"nodeType":"60","messageId":"61","endLine":33,"endColumn":20},{"ruleId":"64","severity":1,"message":"65","line":81,"column":9,"nodeType":"66","messageId":"67","endLine":81,"endColumn":21},{"ruleId":"58","severity":1,"message":"68","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":34},{"ruleId":"58","severity":1,"message":"69","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":14},{"ruleId":"58","severity":1,"message":"70","line":7,"column":8,"nodeType":"60","messageId":"61","endLine":7,"endColumn":22},{"ruleId":"58","severity":1,"message":"71","line":8,"column":8,"nodeType":"60","messageId":"61","endLine":8,"endColumn":13},{"ruleId":"58","severity":1,"message":"72","line":35,"column":12,"nodeType":"60","messageId":"61","endLine":35,"endColumn":16},{"ruleId":"58","severity":1,"message":"73","line":36,"column":12,"nodeType":"60","messageId":"61","endLine":36,"endColumn":16},{"ruleId":"58","severity":1,"message":"74","line":40,"column":11,"nodeType":"60","messageId":"61","endLine":40,"endColumn":27},{"ruleId":"64","severity":1,"message":"65","line":87,"column":9,"nodeType":"66","messageId":"67","endLine":87,"endColumn":21},"no-unused-vars","'setUsername' is assigned a value but never used.","Identifier","unusedVar","'setPassword' is assigned a value but never used.","'handleLogin' is assigned a value but never used.","no-dupe-keys","Duplicate key 'marginBottom'.","ObjectExpression","unexpected","'useRef' is defined but never used.","'Link' is defined but never used.","'DateTimePicker' is defined but never used.","'Clock' is defined but never used.","'date' is assigned a value but never used.","'time' is assigned a value but never used.","'handleDateChange' is assigned a value but never used."]